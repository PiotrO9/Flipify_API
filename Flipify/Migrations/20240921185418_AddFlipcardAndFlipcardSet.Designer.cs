// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Flipify.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240921185418_AddFlipcardAndFlipcardSet")]
    partial class AddFlipcardAndFlipcardSet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pgcrypto");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Flipify.Models.Flipcard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AttemptCount")
                        .HasColumnType("integer");

                    b.Property<decimal>("Ef")
                        .HasColumnType("numeric");

                    b.Property<Guid>("FlipcardSetId")
                        .HasColumnType("uuid");

                    b.Property<string>("ForeignWord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ForeignWordExample")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IntervalDays")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastReviewDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NativeWord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NativeWordExample")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("NextReviewDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("FlipcardSetId");

                    b.ToTable("Flipcards");
                });

            modelBuilder.Entity("Flipify.Models.FlipcardSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BaseLanguage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ForeignLanguage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("FlipcardSets");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLoggedInDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Flipify.Models.Flipcard", b =>
                {
                    b.HasOne("Flipify.Models.FlipcardSet", "FlipcardSet")
                        .WithMany("Flipcards")
                        .HasForeignKey("FlipcardSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlipcardSet");
                });

            modelBuilder.Entity("Flipify.Models.FlipcardSet", b =>
                {
                    b.Navigation("Flipcards");
                });
#pragma warning restore 612, 618
        }
    }
}
